{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\themeforest-ttyOtuIW-easypro-developer-friendly-react-bootstrap-4-admin-template\\\\themeforest\\\\new-seed\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\themeforest-ttyOtuIW-easypro-developer-friendly-react-bootstrap-4-admin-template\\\\themeforest\\\\new-seed\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\themeforest-ttyOtuIW-easypro-developer-friendly-react-bootstrap-4-admin-template\\\\themeforest\\\\new-seed\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\themeforest-ttyOtuIW-easypro-developer-friendly-react-bootstrap-4-admin-template\\\\themeforest\\\\new-seed\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\themeforest-ttyOtuIW-easypro-developer-friendly-react-bootstrap-4-admin-template\\\\themeforest\\\\new-seed\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\themeforest-ttyOtuIW-easypro-developer-friendly-react-bootstrap-4-admin-template\\\\themeforest\\\\new-seed\\\\src\\\\containers\\\\PolarAreaChartTab\\\\IndexPolarChart.js\";\nimport React, { Component } from \"react\";\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataSource from 'chartjs-plugin-datasource';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n    _this.state = {\n      chartData: {\n        datasets: [{\n          hoverBorderWidth: 5,\n          hoverBorderColor: 'black',\n          pointStyle: 'rect',\n          backgroundColor: 'green' //backgroundColor:Array.apply(null, Array(4)).map(_ => getRandomColor())\n\n        }, {\n          hoverBorderWidth: 5,\n          hoverBorderColor: 'black',\n          pointStyle: 'rect',\n          backgroundColor: 'red' //backgroundColor:Array.apply(null, Array(4)).map(_ => getRandomColor())\n\n        }]\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"render\",\n    value: function render() {\n      var option = {\n        title: {\n          display: true,\n          text: 'Test Chart',\n          fontSize: 23\n        },\n        legend: {\n          display: true,\n          position: 'top',\n          labels: {\n            fontColor: 'Black',\n            usePointStyle: true\n          }\n        },\n        layout: {\n          padding: {\n            left: 0,\n            right: 0,\n            bottom: 0,\n            top: 0\n          }\n        },\n        tooltips: {\n          enabled: true\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              suggestedMin: 0\n            }\n          }]\n        },\n        plugins: {\n          datasource: {\n            url: 'testxlsx.xlsx',\n            rowMapping: 'index'\n          }\n        }\n      };\n      return React.createElement(\"div\", {\n        className: \"Chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: this.chartData,\n        options: option,\n        plugins: [ChartDataSource],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/Vivi-ROG1070/Desktop/themeforest-ttyOtuIW-easypro-developer-friendly-react-bootstrap-4-admin-template/themeforest/new-seed/src/containers/PolarAreaChartTab/IndexPolarChart.js"],"names":["React","Component","Bar","ChartDataSource","Chart","props","state","chartData","datasets","hoverBorderWidth","hoverBorderColor","pointStyle","backgroundColor","option","title","display","text","fontSize","legend","position","labels","fontColor","usePointStyle","layout","padding","left","right","bottom","top","tooltips","enabled","scales","yAxes","ticks","suggestedMin","plugins","datasource","url","rowMapping"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAC;AACNC,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,gBAAgB,EAAC,CADrB;AAEIC,UAAAA,gBAAgB,EAAC,OAFrB;AAGIC,UAAAA,UAAU,EAAE,MAHhB;AAIIC,UAAAA,eAAe,EAAC,OAJpB,CAKI;;AALJ,SADM,EAQN;AACIH,UAAAA,gBAAgB,EAAC,CADrB;AAEIC,UAAAA,gBAAgB,EAAC,OAFrB;AAGIC,UAAAA,UAAU,EAAE,MAHhB;AAIIC,UAAAA,eAAe,EAAC,KAJpB,CAKI;;AALJ,SARM;AADJ;AADD,KAAb;AAFc;AAuBjB;;;;6BAEQ;AACL,UAAMC,MAAM,GAAG;AACXC,QAAAA,KAAK,EAAC;AACFC,UAAAA,OAAO,EAAC,IADN;AAEFC,UAAAA,IAAI,EAAE,YAFJ;AAGFC,UAAAA,QAAQ,EAAC;AAHP,SADK;AAMXC,QAAAA,MAAM,EAAC;AACHH,UAAAA,OAAO,EAAC,IADL;AAEHI,UAAAA,QAAQ,EAAC,KAFN;AAGHC,UAAAA,MAAM,EAAC;AACHC,YAAAA,SAAS,EAAC,OADP;AAEHC,YAAAA,aAAa,EAAE;AAFZ;AAHJ,SANI;AAcXC,QAAAA,MAAM,EAAC;AACHC,UAAAA,OAAO,EAAC;AACJC,YAAAA,IAAI,EAAC,CADD;AAEJC,YAAAA,KAAK,EAAC,CAFF;AAGJC,YAAAA,MAAM,EAAC,CAHH;AAIJC,YAAAA,GAAG,EAAC;AAJA;AADL,SAdI;AAsBXC,QAAAA,QAAQ,EAAC;AACLC,UAAAA,OAAO,EAAC;AADH,SAtBE;AAyBXC,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,CAAC;AACJC,YAAAA,KAAK,EAAE;AACHC,cAAAA,YAAY,EAAE;AADX;AADH,WAAD;AADH,SAzBG;AAiCXC,QAAAA,OAAO,EAAE;AACLC,UAAAA,UAAU,EAAE;AACRC,YAAAA,GAAG,EAAE,eADG;AAERC,YAAAA,UAAU,EAAE;AAFJ;AADP;AAjCE,OAAf;AAyCA,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AACI,QAAA,IAAI,EAAE,KAAK/B,SADf;AAEI,QAAA,OAAO,EAAEM,MAFb;AAGI,QAAA,OAAO,EAAE,CAACV,eAAD,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AASH;;;;EA7EeF,S;;AAgFpB,eAAeG,KAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Bar} from 'react-chartjs-2';\r\nimport ChartDataSource from 'chartjs-plugin-datasource';\r\n\r\nclass Chart extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            chartData:{\r\n                datasets: [\r\n                    {\r\n                        hoverBorderWidth:5,\r\n                        hoverBorderColor:'black',\r\n                        pointStyle: 'rect',\r\n                        backgroundColor:'green'\r\n                        //backgroundColor:Array.apply(null, Array(4)).map(_ => getRandomColor())\r\n                    },\r\n                    {\r\n                        hoverBorderWidth:5,\r\n                        hoverBorderColor:'black',\r\n                        pointStyle: 'rect',\r\n                        backgroundColor:'red'\r\n                        //backgroundColor:Array.apply(null, Array(4)).map(_ => getRandomColor())\r\n                    }\r\n\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const option = {\r\n            title:{\r\n                display:true,\r\n                text: 'Test Chart',\r\n                fontSize:23,\r\n            },\r\n            legend:{\r\n                display:true,\r\n                position:'top',\r\n                labels:{\r\n                    fontColor:'Black',\r\n                    usePointStyle: true\r\n                }\r\n            },\r\n            layout:{\r\n                padding:{\r\n                    left:0,\r\n                    right:0,\r\n                    bottom:0,\r\n                    top:0\r\n                }\r\n            },\r\n            tooltips:{\r\n                enabled:true\r\n            },\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        suggestedMin: 0,\r\n                    }\r\n                }]\r\n            },\r\n\r\n            plugins: {\r\n                datasource: {\r\n                    url: 'testxlsx.xlsx',\r\n                    rowMapping: 'index'\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"Chart\">\r\n                <Bar\r\n                    data={this.chartData}\r\n                    options={option}\r\n                    plugins={[ChartDataSource]}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}