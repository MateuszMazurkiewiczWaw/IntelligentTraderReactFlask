{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\themeforest-ttyOtuIW-easypro-developer-friendly-react-bootstrap-4-admin-template\\\\themeforest\\\\new-seed\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\themeforest-ttyOtuIW-easypro-developer-friendly-react-bootstrap-4-admin-template\\\\themeforest\\\\new-seed\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\themeforest-ttyOtuIW-easypro-developer-friendly-react-bootstrap-4-admin-template\\\\themeforest\\\\new-seed\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\themeforest-ttyOtuIW-easypro-developer-friendly-react-bootstrap-4-admin-template\\\\themeforest\\\\new-seed\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\themeforest-ttyOtuIW-easypro-developer-friendly-react-bootstrap-4-admin-template\\\\themeforest\\\\new-seed\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\themeforest-ttyOtuIW-easypro-developer-friendly-react-bootstrap-4-admin-template\\\\themeforest\\\\new-seed\\\\src\\\\containers\\\\charts\\\\PolarAreaChart.js\";\nimport React, { Component } from 'react';\nimport { Polar } from 'react-chartjs-2';\nimport ChartDataSource from 'chartjs-plugin-datasource';\n\nvar PolarAreaChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PolarAreaChart, _Component);\n\n  function PolarAreaChart(props) {\n    var _this;\n\n    _classCallCheck(this, PolarAreaChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PolarAreaChart).call(this, props));\n    _this.state = {\n      chartData: props.chartData\n    };\n    return _this;\n  }\n\n  _createClass(PolarAreaChart, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Polar, {\n        data: this.state.chartData,\n        options: {\n          responsive: true,\n          title: {\n            display: this.props.displayTitle,\n            text: 'Kurs pary walutowej ' + this.props.currencyPair,\n            fontSize: 25\n          },\n          legend: {\n            display: this.props.displayLegend,\n            position: this.props.legendPosition\n          },\n          plugins: {\n            datasource: {\n              url: 'data.csv'\n            }\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        id: \"myChart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PolarAreaChart;\n}(Component);\n\nPolarAreaChart.defaultProps = {\n  displayTitle: true,\n  displayLegend: true,\n  legendPosition: 'center'\n};\nvar chartColors = {\n  red: 'rgb(255, 99, 132)',\n  blue: 'rgb(54, 162, 235)'\n};\nvar color = Chart.helpers.color;\nvar config = {\n  type: 'bar',\n  data: {\n    datasets: [{\n      type: 'line',\n      yAxisID: 'temperature',\n      backgroundColor: 'transparent',\n      borderColor: chartColors.red,\n      pointBackgroundColor: chartColors.red,\n      tension: 0,\n      fill: false\n    }, {\n      yAxisID: 'precipitation',\n      backgroundColor: color(chartColors.blue).alpha(0.5).rgbString(),\n      borderColor: 'transparent'\n    }]\n  },\n  plugins: [ChartDataSource],\n  options: {\n    title: {\n      display: true,\n      text: 'CSV data source (dataset) sample'\n    },\n    scales: {\n      xAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'Month'\n        }\n      }],\n      yAxes: [{\n        id: 'temperature',\n        gridLines: {\n          drawOnChartArea: false\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Temperature (Â°C)'\n        }\n      }, {\n        id: 'precipitation',\n        position: 'right',\n        gridLines: {\n          drawOnChartArea: false\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Precipitation (mm)'\n        }\n      }]\n    },\n    plugins: {\n      datasource: {\n        type: 'csv',\n        url: 'sample-dataset.csv',\n        delimiter: ',',\n        rowMapping: 'dataset',\n        datasetLabels: true,\n        indexLabels: true\n      }\n    }\n  }\n};\n\nwindow.onload = function () {\n  var ctx = document.getElementById('myChart').getContext('2d');\n  window.myChart = new Chart(ctx, config);\n};\n\nexport default PolarAreaChart;","map":{"version":3,"sources":["C:/Users/Vivi-ROG1070/Desktop/themeforest-ttyOtuIW-easypro-developer-friendly-react-bootstrap-4-admin-template/themeforest/new-seed/src/containers/charts/PolarAreaChart.js"],"names":["React","Component","Polar","ChartDataSource","PolarAreaChart","props","state","chartData","responsive","title","display","displayTitle","text","currencyPair","fontSize","legend","displayLegend","position","legendPosition","plugins","datasource","url","defaultProps","chartColors","red","blue","color","Chart","helpers","config","type","data","datasets","yAxisID","backgroundColor","borderColor","pointBackgroundColor","tension","fill","alpha","rgbString","options","scales","xAxes","scaleLabel","labelString","yAxes","id","gridLines","drawOnChartArea","delimiter","rowMapping","datasetLabels","indexLabels","window","onload","ctx","document","getElementById","getContext","myChart"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Polar} from 'react-chartjs-2';\r\nimport ChartDataSource from 'chartjs-plugin-datasource';\r\n\r\nclass PolarAreaChart extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            chartData:props.chartData\r\n        }\r\n    }\r\n\r\n    static defaultProps = {\r\n        displayTitle:true,\r\n        displayLegend: true,\r\n        legendPosition:'center',\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"chart\">\r\n                <Polar\r\n                    data={this.state.chartData}\r\n                    options={{\r\n                        responsive: true,\r\n                        title:{\r\n                            display:this.props.displayTitle,\r\n                            text:'Kurs pary walutowej ' + this.props.currencyPair,\r\n                            fontSize:25\r\n                        },\r\n                        legend:{\r\n                            display:this.props.displayLegend,\r\n                            position:this.props.legendPosition\r\n                        },\r\n\r\n                        plugins: {\r\n                            datasource: {\r\n                                url: 'data.csv'\r\n                            }\r\n                        }\r\n\r\n\r\n                    }}\r\n                />\r\n                <div>\r\n                    <canvas id=\"myChart\"></canvas>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nvar chartColors = {\r\n    red: 'rgb(255, 99, 132)',\r\n    blue: 'rgb(54, 162, 235)'\r\n};\r\n\r\nvar color = Chart.helpers.color;\r\nvar config = {\r\n    type: 'bar',\r\n    data: {\r\n        datasets: [{\r\n            type: 'line',\r\n            yAxisID: 'temperature',\r\n            backgroundColor: 'transparent',\r\n            borderColor: chartColors.red,\r\n            pointBackgroundColor: chartColors.red,\r\n            tension: 0,\r\n            fill: false\r\n        }, {\r\n            yAxisID: 'precipitation',\r\n            backgroundColor: color(chartColors.blue).alpha(0.5).rgbString(),\r\n            borderColor: 'transparent'\r\n        }]\r\n    },\r\n    plugins: [ChartDataSource],\r\n    options: {\r\n        title: {\r\n            display: true,\r\n            text: 'CSV data source (dataset) sample'\r\n        },\r\n        scales: {\r\n            xAxes: [{\r\n                scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'Month'\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                id: 'temperature',\r\n                gridLines: {\r\n                    drawOnChartArea: false\r\n                },\r\n                scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'Temperature (Â°C)'\r\n                }\r\n            }, {\r\n                id: 'precipitation',\r\n                position: 'right',\r\n                gridLines: {\r\n                    drawOnChartArea: false\r\n                },\r\n                scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'Precipitation (mm)'\r\n                }\r\n            }]\r\n        },\r\n        plugins: {\r\n            datasource: {\r\n                type: 'csv',\r\n                url: 'sample-dataset.csv',\r\n                delimiter: ',',\r\n                rowMapping: 'dataset',\r\n                datasetLabels: true,\r\n                indexLabels: true\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nwindow.onload = function() {\r\n    var ctx = document.getElementById('myChart').getContext('2d');\r\n    window.myChart = new Chart(ctx, config);\r\n};\r\n\r\n\r\n\r\n\r\nexport default PolarAreaChart;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}