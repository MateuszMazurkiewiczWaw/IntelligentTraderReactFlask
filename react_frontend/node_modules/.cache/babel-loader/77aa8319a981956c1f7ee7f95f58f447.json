{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\FlaskReact\\\\react_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\FlaskReact\\\\react_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\FlaskReact\\\\react_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\FlaskReact\\\\react_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\FlaskReact\\\\react_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Vivi-ROG1070\\\\Desktop\\\\FlaskReact\\\\react_frontend\\\\src\\\\containers\\\\DoughnutChartTab\\\\IndexDoughnutChart.js\";\nimport React, { Component } from \"react\";\nimport DoughnutChart from \"../charts/DoughnutChart\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport DoughnutChartCard from \"./components/DoughnutChartCard\";\n\nvar IndexPolarChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IndexPolarChart, _Component);\n\n  function IndexPolarChart(props) {\n    var _this;\n\n    _classCallCheck(this, IndexPolarChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IndexPolarChart).call(this, props));\n    _this.state = {\n      chartData: {}\n    };\n    return _this;\n  }\n\n  _createClass(IndexPolarChart, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getChartData();\n    }\n  }, {\n    key: \"getChartData\",\n    value: function getChartData() {\n      // Ajax calls here\n      this.setState({\n        chartData: {\n          labels: ['21:54', '21:55', '21:56', '21:57', '21:58'],\n          datasets: [{\n            label: 'Kurs rzeczywisty 18.01.2019',\n            data: [1.13633, 1.136285, 1.13629, 1.135975, 1.136105, 1.136],\n            borderColor: \"#3cba9f\",\n            backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)'],\n            hoverBorderColor: \"#ba4f45\",\n            fill: false\n          }]\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Kurs pary walutowej EUR/USD - wykres Doughnut\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(DoughnutChartCard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(DoughnutChart, {\n        chartData: this.state.chartData,\n        currencyPair: \"EUR/USD\",\n        legendPosition: \"bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return IndexPolarChart;\n}(Component);\n\nexport default IndexPolarChart;","map":{"version":3,"sources":["C:/Users/Vivi-ROG1070/Desktop/FlaskReact/react_frontend/src/containers/DoughnutChartTab/IndexDoughnutChart.js"],"names":["React","Component","DoughnutChart","Col","Container","Row","DoughnutChartCard","IndexPolarChart","props","state","chartData","getChartData","setState","labels","datasets","label","data","borderColor","backgroundColor","hoverBorderColor","fill"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,SAAQC,GAAR,EAAaC,SAAb,EAAwBC,GAAxB,QAAkC,YAAlC;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;;IAEMC,e;;;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAFe;AAKlB;;;;yCAEoB;AACjB,WAAKC,YAAL;AACH;;;mCAEc;AACX;AACA,WAAKC,QAAL,CAAc;AACVF,QAAAA,SAAS,EAAE;AACPG,UAAAA,MAAM,EAAE,CACL,OADK,EACG,OADH,EACW,OADX,EACmB,OADnB,EAC2B,OAD3B,CADD;AAIPC,UAAAA,QAAQ,EAAE,CACN;AACIC,YAAAA,KAAK,EAAE,6BADX;AAEIC,YAAAA,IAAI,EAAE,CACF,OADE,EACM,QADN,EACe,OADf,EACuB,QADvB,EACgC,QADhC,EACyC,KADzC,CAFV;AAKIC,YAAAA,WAAW,EAAE,SALjB;AAMIC,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CANrB;AAcIC,YAAAA,gBAAgB,EAAE,SAdtB;AAeIC,YAAAA,IAAI,EAAE;AAfV,WADM;AAJH;AADD,OAAd;AA0BH;;;6BAEQ;AACL,aACI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADJ,CADJ,CADJ,EAMI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CANJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAE,KAAKX,KAAL,CAAWC,SAArC;AAAgD,QAAA,YAAY,EAAC,SAA7D;AAAuE,QAAA,cAAc,EAAC,QAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CATJ,CADJ;AAeH;;;;EA1DyBT,S;;AA6D9B,eAAeM,eAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport DoughnutChart from \"../charts/DoughnutChart\";\r\nimport {Col, Container, Row} from \"reactstrap\";\r\nimport DoughnutChartCard from \"./components/DoughnutChartCard\";\r\n\r\nclass IndexPolarChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chartData: {}\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getChartData();\r\n    }\r\n\r\n    getChartData() {\r\n        // Ajax calls here\r\n        this.setState({\r\n            chartData: {\r\n                labels: [\r\n                   '21:54','21:55','21:56','21:57','21:58'\r\n                ],\r\n                datasets: [\r\n                    {\r\n                        label: 'Kurs rzeczywisty 18.01.2019',\r\n                        data: [\r\n                            1.13633,1.136285,1.13629,1.135975,1.136105,1.136\r\n                        ],\r\n                        borderColor: \"#3cba9f\",\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.6)',\r\n                            'rgba(54, 162, 235, 0.6)',\r\n                            'rgba(255, 206, 86, 0.6)',\r\n                            'rgba(75, 192, 192, 0.6)',\r\n                            'rgba(153, 102, 255, 0.6)',\r\n                            'rgba(255, 159, 64, 0.6)'\r\n                        ],\r\n                        hoverBorderColor: \"#ba4f45\",\r\n                        fill: false\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"dashboard\">\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <h3 className=\"page-title\">Kurs pary walutowej EUR/USD - wykres Doughnut</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <DoughnutChartCard/>\r\n                </Row>\r\n                <div>\r\n                    <DoughnutChart chartData={this.state.chartData} currencyPair=\"EUR/USD\" legendPosition=\"bottom\"/>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IndexPolarChart;"]},"metadata":{},"sourceType":"module"}